<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blod.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.blod.entity.User" >
    <id column="us_username" property="usUsername" jdbcType="VARCHAR" />
    <result column="us_password" property="usPassword" jdbcType="VARCHAR" />
    <result column="us_nickname" property="usNickname" jdbcType="VARCHAR" />
    <result column="us_question" property="usQuestion" jdbcType="VARCHAR" />
    <result column="us_answer" property="usAnswer" jdbcType="VARCHAR" />
    <result column="us_gender" property="usGender" jdbcType="INTEGER" />
    <result column="us_grade" property="usGrade" jdbcType="VARCHAR" />
    <result column="us_email" property="usEmail" jdbcType="VARCHAR" />
    <result column="us_time" property="usTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    us_username, us_password, us_nickname, us_question, us_answer, us_gender, us_grade, 
    us_email, us_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.blod.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where us_username = #{usUsername,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where us_username = #{usUsername,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.blod.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blod.entity.User" >
    insert into user (us_username, us_password, us_nickname, 
      us_question, us_answer, us_gender, 
      us_grade, us_email, us_time
      )
    values (#{usUsername,jdbcType=VARCHAR}, #{usPassword,jdbcType=VARCHAR}, #{usNickname,jdbcType=VARCHAR}, 
      #{usQuestion,jdbcType=VARCHAR}, #{usAnswer,jdbcType=VARCHAR}, #{usGender,jdbcType=INTEGER}, 
      #{usGrade,jdbcType=VARCHAR}, #{usEmail,jdbcType=VARCHAR}, #{usTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blod.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="usUsername != null" >
        us_username,
      </if>
      <if test="usPassword != null" >
        us_password,
      </if>
      <if test="usNickname != null" >
        us_nickname,
      </if>
      <if test="usQuestion != null" >
        us_question,
      </if>
      <if test="usAnswer != null" >
        us_answer,
      </if>
      <if test="usGender != null" >
        us_gender,
      </if>
      <if test="usGrade != null" >
        us_grade,
      </if>
      <if test="usEmail != null" >
        us_email,
      </if>
      <if test="usTime != null" >
        us_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="usUsername != null" >
        #{usUsername,jdbcType=VARCHAR},
      </if>
      <if test="usPassword != null" >
        #{usPassword,jdbcType=VARCHAR},
      </if>
      <if test="usNickname != null" >
        #{usNickname,jdbcType=VARCHAR},
      </if>
      <if test="usQuestion != null" >
        #{usQuestion,jdbcType=VARCHAR},
      </if>
      <if test="usAnswer != null" >
        #{usAnswer,jdbcType=VARCHAR},
      </if>
      <if test="usGender != null" >
        #{usGender,jdbcType=INTEGER},
      </if>
      <if test="usGrade != null" >
        #{usGrade,jdbcType=VARCHAR},
      </if>
      <if test="usEmail != null" >
        #{usEmail,jdbcType=VARCHAR},
      </if>
      <if test="usTime != null" >
        #{usTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blod.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.usUsername != null" >
        us_username = #{record.usUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.usPassword != null" >
        us_password = #{record.usPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.usNickname != null" >
        us_nickname = #{record.usNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.usQuestion != null" >
        us_question = #{record.usQuestion,jdbcType=VARCHAR},
      </if>
      <if test="record.usAnswer != null" >
        us_answer = #{record.usAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.usGender != null" >
        us_gender = #{record.usGender,jdbcType=INTEGER},
      </if>
      <if test="record.usGrade != null" >
        us_grade = #{record.usGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.usEmail != null" >
        us_email = #{record.usEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.usTime != null" >
        us_time = #{record.usTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set us_username = #{record.usUsername,jdbcType=VARCHAR},
      us_password = #{record.usPassword,jdbcType=VARCHAR},
      us_nickname = #{record.usNickname,jdbcType=VARCHAR},
      us_question = #{record.usQuestion,jdbcType=VARCHAR},
      us_answer = #{record.usAnswer,jdbcType=VARCHAR},
      us_gender = #{record.usGender,jdbcType=INTEGER},
      us_grade = #{record.usGrade,jdbcType=VARCHAR},
      us_email = #{record.usEmail,jdbcType=VARCHAR},
      us_time = #{record.usTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blod.entity.User" >
    update user
    <set >
      <if test="usPassword != null" >
        us_password = #{usPassword,jdbcType=VARCHAR},
      </if>
      <if test="usNickname != null" >
        us_nickname = #{usNickname,jdbcType=VARCHAR},
      </if>
      <if test="usQuestion != null" >
        us_question = #{usQuestion,jdbcType=VARCHAR},
      </if>
      <if test="usAnswer != null" >
        us_answer = #{usAnswer,jdbcType=VARCHAR},
      </if>
      <if test="usGender != null" >
        us_gender = #{usGender,jdbcType=INTEGER},
      </if>
      <if test="usGrade != null" >
        us_grade = #{usGrade,jdbcType=VARCHAR},
      </if>
      <if test="usEmail != null" >
        us_email = #{usEmail,jdbcType=VARCHAR},
      </if>
      <if test="usTime != null" >
        us_time = #{usTime,jdbcType=VARCHAR},
      </if>
    </set>
    where us_username = #{usUsername,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blod.entity.User" >
    update user
    set us_password = #{usPassword,jdbcType=VARCHAR},
      us_nickname = #{usNickname,jdbcType=VARCHAR},
      us_question = #{usQuestion,jdbcType=VARCHAR},
      us_answer = #{usAnswer,jdbcType=VARCHAR},
      us_gender = #{usGender,jdbcType=INTEGER},
      us_grade = #{usGrade,jdbcType=VARCHAR},
      us_email = #{usEmail,jdbcType=VARCHAR},
      us_time = #{usTime,jdbcType=VARCHAR}
    where us_username = #{usUsername,jdbcType=VARCHAR}
  </update>
</mapper>