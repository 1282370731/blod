<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blod.mapper.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.blod.entity.Message" >
    <id column="msg_id" property="msgId" jdbcType="BIGINT" />
    <result column="msg_username" property="msgUsername" jdbcType="VARCHAR" />
    <result column="msg_time" property="msgTime" jdbcType="VARCHAR" />
    <result column="msg_name" property="msgName" jdbcType="VARCHAR" />
    <result column="msg_email" property="msgEmail" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.blod.entity.Message" extends="BaseResultMap" >
    <result column="msg_content" property="msgContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    msg_id, msg_username, msg_time, msg_name, msg_email
  </sql>
  <sql id="Blob_Column_List" >
    msg_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.blod.entity.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.blod.entity.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where msg_id = #{msgId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from message
    where msg_id = #{msgId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.blod.entity.MessageExample" >
    delete from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blod.entity.Message" >
    insert into message (msg_id, msg_username, msg_time, 
      msg_name, msg_email, msg_content
      )
    values (#{msgId,jdbcType=BIGINT}, #{msgUsername,jdbcType=VARCHAR}, #{msgTime,jdbcType=VARCHAR}, 
      #{msgName,jdbcType=VARCHAR}, #{msgEmail,jdbcType=VARCHAR}, #{msgContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blod.entity.Message" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        msg_id,
      </if>
      <if test="msgUsername != null" >
        msg_username,
      </if>
      <if test="msgTime != null" >
        msg_time,
      </if>
      <if test="msgName != null" >
        msg_name,
      </if>
      <if test="msgEmail != null" >
        msg_email,
      </if>
      <if test="msgContent != null" >
        msg_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        #{msgId,jdbcType=BIGINT},
      </if>
      <if test="msgUsername != null" >
        #{msgUsername,jdbcType=VARCHAR},
      </if>
      <if test="msgTime != null" >
        #{msgTime,jdbcType=VARCHAR},
      </if>
      <if test="msgName != null" >
        #{msgName,jdbcType=VARCHAR},
      </if>
      <if test="msgEmail != null" >
        #{msgEmail,jdbcType=VARCHAR},
      </if>
      <if test="msgContent != null" >
        #{msgContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blod.entity.MessageExample" resultType="java.lang.Integer" >
    select count(*) from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update message
    <set >
      <if test="record.msgId != null" >
        msg_id = #{record.msgId,jdbcType=BIGINT},
      </if>
      <if test="record.msgUsername != null" >
        msg_username = #{record.msgUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.msgTime != null" >
        msg_time = #{record.msgTime,jdbcType=VARCHAR},
      </if>
      <if test="record.msgName != null" >
        msg_name = #{record.msgName,jdbcType=VARCHAR},
      </if>
      <if test="record.msgEmail != null" >
        msg_email = #{record.msgEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.msgContent != null" >
        msg_content = #{record.msgContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update message
    set msg_id = #{record.msgId,jdbcType=BIGINT},
      msg_username = #{record.msgUsername,jdbcType=VARCHAR},
      msg_time = #{record.msgTime,jdbcType=VARCHAR},
      msg_name = #{record.msgName,jdbcType=VARCHAR},
      msg_email = #{record.msgEmail,jdbcType=VARCHAR},
      msg_content = #{record.msgContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update message
    set msg_id = #{record.msgId,jdbcType=BIGINT},
      msg_username = #{record.msgUsername,jdbcType=VARCHAR},
      msg_time = #{record.msgTime,jdbcType=VARCHAR},
      msg_name = #{record.msgName,jdbcType=VARCHAR},
      msg_email = #{record.msgEmail,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blod.entity.Message" >
    update message
    <set >
      <if test="msgUsername != null" >
        msg_username = #{msgUsername,jdbcType=VARCHAR},
      </if>
      <if test="msgTime != null" >
        msg_time = #{msgTime,jdbcType=VARCHAR},
      </if>
      <if test="msgName != null" >
        msg_name = #{msgName,jdbcType=VARCHAR},
      </if>
      <if test="msgEmail != null" >
        msg_email = #{msgEmail,jdbcType=VARCHAR},
      </if>
      <if test="msgContent != null" >
        msg_content = #{msgContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where msg_id = #{msgId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blod.entity.Message" >
    update message
    set msg_username = #{msgUsername,jdbcType=VARCHAR},
      msg_time = #{msgTime,jdbcType=VARCHAR},
      msg_name = #{msgName,jdbcType=VARCHAR},
      msg_email = #{msgEmail,jdbcType=VARCHAR},
      msg_content = #{msgContent,jdbcType=LONGVARCHAR}
    where msg_id = #{msgId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blod.entity.Message" >
    update message
    set msg_username = #{msgUsername,jdbcType=VARCHAR},
      msg_time = #{msgTime,jdbcType=VARCHAR},
      msg_name = #{msgName,jdbcType=VARCHAR},
      msg_email = #{msgEmail,jdbcType=VARCHAR}
    where msg_id = #{msgId,jdbcType=BIGINT}
  </update>
</mapper>